geom_bar() +
theme_bw() +
scale_x_discrete(labels = my_x_labels)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(haven)
setwd('/users/hackettl/drive_berkeley/GSI_GSR/2020_fall/tutorials/pandas_for_stata_users')
sinac <- read_dta('data/sinac_sample.dta')
local <- read.csv('data/cat_local_inegi.csv')
options(width = 100)
# br
head(sinac, row = 10)
# sum sexo_nac
summary(sinac$sexo_nac)
# tab atendio
sinac %>% count(atendio)
# duplicates drop, save to different data
sinac_unique <- sinac %>% distinct()
# to do operations by groups, like bys: sum
# (you can add more variables to the list at will)
# note that we need to ignore missing values with na.rm = TRUE
sinac %>% group_by(ent_res_cve) %>%
summarise(avg_weight = mean(peso_nac_vivo, na.rm = TRUE),
min_weight = min(peso_nac_vivo, na.rm = TRUE))
# view the data sorted: sort
sinac %>% arrange(edad_madre,apgar)
# again, here I haven't saved this, I'm just looking at it.
# To save this, set it equal to a name
hist(sinac$edad_madre)
ggplot(data = sinac, aes(x = edad_madre)) +
geom_histogram(color="darkblue", fill="lightblue") +
xlab("Mother's age") +
theme_bw()
# rename
# note that here I AM reassigning the data to save changes
sinac <- sinac %>% rename(mother_age = edad_madre,
no_preg = numero_embarazos,
length = talla_nac_vivo,
weight = peso_nac_vivo,
no_appts = tot_consult,
day_born = dia_nac_hijo,
mo_born = mes_nac_hijo,
yr_born = year_nac_hijo,
sex = sexo_nac,
gest_age = semanas_gest,
type_doc = atendio)
sinac %>% head()
# Let's change the state code from 99 to missing
# replace
# ifelse has arguments condition, what to do if true, then what to do if false
sinac <- sinac %>% mutate(ent_res_cve =
ifelse(
ent_res_cve == 99,
NaN,
ent_res_cve
))
summary(sinac$ent_res_cve)
# good! looks like the max code is now 32 (the number of states in Mexico)
# gen
# Now let's make a categorical variable for mother's schooling
sinac <- sinac %>% mutate(schooling_cat =
ifelse(
schooling_mother < 4,
1,
ifelse(
schooling_mother >= 4 & schooling_mother <= 6,
2,
3)
))
summary(sinac$schooling_cat)
# first label my variable by making it a factor var
sinac <- sinac %>% mutate(school = factor(schooling_cat,
levels = c(1,2,3),
labels = c("Secondary", "HS", "HS+")
)
)
ggplot(sinac, aes(school)) +
geom_bar(color="darkblue", fill="lightblue") +
labs(x = 'Schooling', y = '# observations') +
theme_bw()
## stata: collapse (mean) **, by(mun_res_cve ent_res_cve)
sinac_means <- sinac %>%
select(mother_age, weight, length, schooling_mother) %>%
aggregate(by=list(sinac$ent_res_cve),
FUN = mean,
na.rm = TRUE) %>%
rename(ent_res_cve = Group.1)
library(knitr)
sinac_means %>% head(10) %>% kable()
# we want total population, so our function for aggregation will be sum:
local_mun <- local %>%
select(CVE_ENT, CVE_MUN, POB_TOTAL) %>%
aggregate(by=list(local$CVE_ENT, local$CVE_MUN),
FUN = sum,
na.rm = TRUE) %>%
rename(ent_res_cve = Group.1,
mun_res_cve = Group.2) %>%
select(ent_res_cve, mun_res_cve, POB_TOTAL)
local_mun %>% head(10) %>% kable()
View(sinac)
View(sinac)
sinac %>% head()
sinac_merge <- sinac %>%
left_join(local_mun,
by = c('ent_res_cve','mun_res_cve'))
sinac_merge <- sinac %>%
mutate(ent_res_cve = as.double(ent_res_cve),
mun_res_cve = as.double(mun_res_cve)) %>%
left_join(local_mun,
by = c('ent_res_cve','mun_res_cve'))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(haven)
setwd('/users/hackettl/drive_berkeley/GSI_GSR/2020_fall/tutorials/pandas_for_stata_users')
sinac <- read_dta('data/sinac_sample.dta')
local <- read.csv('data/cat_local_inegi.csv')
options(width = 100)
# br
head(sinac, row = 10)
# sum sexo_nac
summary(sinac$sexo_nac)
# tab atendio
sinac %>% count(atendio)
# duplicates drop, save to different data
sinac_unique <- sinac %>% distinct()
# to do operations by groups, like bys: sum
# (you can add more variables to the list at will)
# note that we need to ignore missing values with na.rm = TRUE
sinac %>% group_by(ent_res_cve) %>%
summarise(avg_weight = mean(peso_nac_vivo, na.rm = TRUE),
min_weight = min(peso_nac_vivo, na.rm = TRUE))
# view the data sorted: sort
sinac %>% arrange(edad_madre,apgar)
# again, here I haven't saved this, I'm just looking at it.
# To save this, set it equal to a name
hist(sinac$edad_madre)
ggplot(data = sinac, aes(x = edad_madre)) +
geom_histogram(color="darkblue", fill="lightblue") +
xlab("Mother's age") +
theme_bw()
# rename
# note that here I AM reassigning the data to save changes
sinac <- sinac %>% rename(mother_age = edad_madre,
no_preg = numero_embarazos,
length = talla_nac_vivo,
weight = peso_nac_vivo,
no_appts = tot_consult,
day_born = dia_nac_hijo,
mo_born = mes_nac_hijo,
yr_born = year_nac_hijo,
sex = sexo_nac,
gest_age = semanas_gest,
type_doc = atendio)
sinac %>% head()
# Let's change the state code from 99 to missing
# replace
# ifelse has arguments condition, what to do if true, then what to do if false
sinac <- sinac %>% mutate(ent_res_cve =
ifelse(
ent_res_cve == 99,
NaN,
ent_res_cve
))
summary(sinac$ent_res_cve)
# good! looks like the max code is now 32 (the number of states in Mexico)
# gen
# Now let's make a categorical variable for mother's schooling
sinac <- sinac %>% mutate(schooling_cat =
ifelse(
schooling_mother < 4,
1,
ifelse(
schooling_mother >= 4 & schooling_mother <= 6,
2,
3)
))
summary(sinac$schooling_cat)
# first label my variable by making it a factor var
sinac <- sinac %>% mutate(school = factor(schooling_cat,
levels = c(1,2,3),
labels = c("Secondary", "HS", "HS+")
)
)
ggplot(sinac, aes(school)) +
geom_bar(color="darkblue", fill="lightblue") +
labs(x = 'Schooling', y = '# observations') +
theme_bw()
## stata: collapse (mean) **, by(mun_res_cve ent_res_cve)
sinac_means <- sinac %>%
select(mother_age, weight, length, schooling_mother) %>%
aggregate(by=list(sinac$ent_res_cve),
FUN = mean,
na.rm = TRUE) %>%
rename(ent_res_cve = Group.1)
library(knitr)
sinac_means %>% head(10) %>% kable()
# we want total population, so our function for aggregation will be sum:
local_mun <- local %>%
select(CVE_ENT, CVE_MUN, POB_TOTAL) %>%
aggregate(by=list(local$CVE_ENT, local$CVE_MUN),
FUN = sum,
na.rm = TRUE) %>%
rename(ent_res_cve = Group.1,
mun_res_cve = Group.2) %>%
select(ent_res_cve, mun_res_cve, POB_TOTAL)
local_mun %>% head(10) %>% kable()
sinac_merge <- sinac %>%
mutate(ent_res_cve = as.double(ent_res_cve),
mun_res_cve = as.double(mun_res_cve)) %>%
left_join(local_mun,
by = c('ent_res_cve','mun_res_cve'))
sinac_merge %>%
select(ent_res_cve,
mun_res_cve,
weight,
mother_age,
schooling_cat,
POB_TOTAL) %>%
head(10) %>% kable()
describe(sinac_merge$POB_TOTAL)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(haven)
setwd('/users/hackettl/drive_berkeley/GSI_GSR/2020_fall/tutorials/pandas_for_stata_users')
sinac <- read_dta('data/sinac_sample.dta')
local <- read.csv('data/cat_local_inegi.csv')
options(width = 100)
# br
head(sinac, row = 10)
# sum sexo_nac
summary(sinac$sexo_nac)
# tab atendio
sinac %>% count(atendio)
# duplicates drop, save to different data
sinac_unique <- sinac %>% distinct()
# to do operations by groups, like bys: sum
# (you can add more variables to the list at will)
# note that we need to ignore missing values with na.rm = TRUE
sinac %>% group_by(ent_res_cve) %>%
summarise(avg_weight = mean(peso_nac_vivo, na.rm = TRUE),
min_weight = min(peso_nac_vivo, na.rm = TRUE))
# view the data sorted: sort
sinac %>% arrange(edad_madre,apgar)
# again, here I haven't saved this, I'm just looking at it.
# To save this, set it equal to a name
hist(sinac$edad_madre)
ggplot(data = sinac, aes(x = edad_madre)) +
geom_histogram(color="darkblue", fill="lightblue") +
xlab("Mother's age") +
theme_bw()
# rename
# note that here I AM reassigning the data to save changes
sinac <- sinac %>% rename(mother_age = edad_madre,
no_preg = numero_embarazos,
length = talla_nac_vivo,
weight = peso_nac_vivo,
no_appts = tot_consult,
day_born = dia_nac_hijo,
mo_born = mes_nac_hijo,
yr_born = year_nac_hijo,
sex = sexo_nac,
gest_age = semanas_gest,
type_doc = atendio)
sinac %>% head()
# Let's change the state code from 99 to missing
# replace
# ifelse has arguments condition, what to do if true, then what to do if false
sinac <- sinac %>% mutate(ent_res_cve =
ifelse(
ent_res_cve == 99,
NaN,
ent_res_cve
))
summary(sinac$ent_res_cve)
# good! looks like the max code is now 32 (the number of states in Mexico)
# gen
# Now let's make a categorical variable for mother's schooling
sinac <- sinac %>% mutate(schooling_cat =
ifelse(
schooling_mother < 4,
1,
ifelse(
schooling_mother >= 4 & schooling_mother <= 6,
2,
3)
))
summary(sinac$schooling_cat)
# first label my variable by making it a factor var
sinac <- sinac %>% mutate(school = factor(schooling_cat,
levels = c(1,2,3),
labels = c("Secondary", "HS", "HS+")
)
)
ggplot(sinac, aes(school)) +
geom_bar(color="darkblue", fill="lightblue") +
labs(x = 'Schooling', y = '# observations') +
theme_bw()
## stata: collapse (mean) **, by(mun_res_cve ent_res_cve)
sinac_means <- sinac %>%
select(mother_age, weight, length, schooling_mother) %>%
aggregate(by=list(sinac$ent_res_cve),
FUN = mean,
na.rm = TRUE) %>%
rename(ent_res_cve = Group.1)
library(knitr)
sinac_means %>% head(10) %>% kable()
# we want total population, so our function for aggregation will be sum:
local_mun <- local %>%
select(CVE_ENT, CVE_MUN, POB_TOTAL) %>%
aggregate(by=list(local$CVE_ENT, local$CVE_MUN),
FUN = sum,
na.rm = TRUE) %>%
rename(ent_res_cve = Group.1,
mun_res_cve = Group.2) %>%
select(ent_res_cve, mun_res_cve, POB_TOTAL)
local_mun %>% head(10) %>% kable()
sinac_merge <- sinac %>%
mutate(ent_res_cve = as.double(ent_res_cve),
mun_res_cve = as.double(mun_res_cve)) %>%
left_join(local_mun,
by = c('ent_res_cve','mun_res_cve'))
sinac_merge %>%
select(ent_res_cve,
mun_res_cve,
weight,
mother_age,
schooling_cat,
POB_TOTAL) %>%
head(10) %>% kable()
summary(sinac_merge$POB_TOTAL)
sinac_merge %>% filter(is.na(mun_res_cve)) %>%
summary()
sinac_merge %>%
filter(is.na(POB_TOTAL)) %>%
select(mun_res_cve)
summary()
sinac_merge %>%
filter(is.na(POB_TOTAL)) %>%
select(mun_res_cve) %>%
summary()
